eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
#url по которому можем найти discovery сервер

## имя по которому discovery сервер будет искать данный сервис
spring.application.name=notification-service

server.port=0

## Включаем режим отслеживания запросов
spring.sleuth.integration.enabled=true

## Локальный хост нашего сервиса по отслеживанию запросов, можно зайти и проверить каждый запрос
spring.zipkin.baseUrl=http://localhost:9411/api/v2/spanse

##Данное свойство говорит о том, что мы хотим отслеживать все 100% запросов поступающих к нашим сервисам (=1.0)
spring.sleuth.sampler.probability=1.0



### Kafka properties
spring.kafka.bootstrap-servers=http://localhost:9092
#Тема по умолчанию для всех сообщений при создании заказа
spring.kafka.template.default-topic=notificationTopic
#GroupId
spring.kafka.consumer.group-id= notificationId
#Указываем спрингбуту как десериализовать полученный объект, который отправил нам order service // ( consumer) потребитель в данном случае данный сервис notification-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#Указываем как десериализовать (преобразить) обратно полученный объект из order service
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer



#Указываем путь до нужного файла (потребитель)
spring.kafka.consumer.properties.spring.json.type.mapping=event:notificationservice.OrderPlacedEvent